@model BuildingCondition.Db.Models.User
@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> _userManager
@inject RoleManager<IdentityRole> _roleManager
@{RoleManager<IdentityRole> roleManager = _roleManager;}
@{UserManager<IdentityUser> userManager = _userManager;}

@{
    ViewData["Title"] = "Details";
}

@await Html.PartialAsync("_LayoutHeader")

<section>
    <div class="row mx-1 my-1">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <p>@Model.FirstName @Model.LastName</p>
                    <p>@Model.Email</p>
                </div>
            </div>
        </div>
    </div>
    <div class="row mx-1 my-1">
        <div class="col-4">
            <div class="card">
                <div class="card-body">
                    <p>Gas Qualification Certificate</p>
                    <table class="table table-centered mb-0">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Certificate Number</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{ var count = 0; }
                            @foreach (var gasQualificationCertificate in Model.GasQualificationCertificates)
                            {
                                count++;
                                <tr>
                                    <td scope="row">@count</td>
                                    <td>@gasQualificationCertificate.CertificateNumber</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class="col-4">
            <div class="card">
                <div class="card-body">
                    <p>Electrical Qualification Certificate</p>
                    <table class="table table-centered mb-0">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Certificate Number</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{ count = 0; }
                            @foreach (var electricalQualificationCertificate in Model.ElectricalQualificationCertificates)
                            {
                                count++;
                                <tr>
                                    <td scope="row">@count</td>
                                    <td>@electricalQualificationCertificate.CertificateNumber</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class="col-4">
            <div class="card">
                <div class="card-body">
                    <p>Permissions</p>
                    <table class="table table-centered mb-0">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Role</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @{ count = 0; }
                            @{ var roleNames = new List<string>(); }
                            @foreach(var role in roleManager.Roles.OrderBy(a => a.Name))
                            {
                                roleNames.Add(role.Name);
                            }
                            @foreach (var roleName in roleNames)
                            {
                                count++;
                                <tr>
                                    <td scope="row">@count</td>
                                    <td>@roleName</td>
                                    <td>
                                        @if (Task.Run(() => userManager.IsInRoleAsync(Model, roleName)).Result)
                                        {
                                            <i class="fas fa-lock-open text-success"></i>
                                        }
                                        else
                                        {
                                            <i class="fas fa-lock text-danger"></i>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</section>